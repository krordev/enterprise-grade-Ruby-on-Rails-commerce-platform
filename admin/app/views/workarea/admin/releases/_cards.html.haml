.grid.grid--auto.grid--flush.grid--center
  .grid__cell
    .card{ class: card_classes(:attributes, local_assigns[:active]) }
      = link_to edit_release_path(model), class: 'card__header' do
        %span.card__header-text= t('workarea.admin.releases.cards.attributes.title')
        = inline_svg_tag 'workarea/admin/icons/attributes.svg', class: 'card__icon'

      - if local_assigns[:active].blank?
        .card__body
          %ul.list-reset
            %li
              %strong= t('workarea.admin.releases.cards.attributes.publishes')
              - if model.publish_at.present?
                #{local_time_ago(model.publish_at)}
              - else
                = t('workarea.admin.releases.cards.attributes.unscheduled')
            %li
              %strong= t('workarea.admin.releases.cards.attributes.last_published')
              - if model.published_at.present?
                #{local_time_ago(model.published_at)}
              - else
                = t('workarea.admin.releases.cards.attributes.never')
            %li
              %strong= t('workarea.admin.fields.tags')
              = model.tags.join(', ').presence || t('workarea.admin.releases.cards.attributes.none')
            %li
              %strong= t('workarea.admin.fields.updated_at')
              #{local_time_ago(model.updated_at)}
            %li
              %strong= t('workarea.admin.fields.created_at')
              #{local_time_ago(model.created_at)}

          = link_to edit_release_path(model), class: 'card__button' do
            %span.button.button--small= t('workarea.admin.releases.cards.attributes.button')

  .grid__cell
    .card{ class: card_classes(:plan_changes, local_assigns[:active]) }
      = link_to release_releasables_path(model), class: 'card__header' do
        %span.card__header-text= t('workarea.admin.releases.cards.plan_changes.title')
        = inline_svg_tag 'workarea/admin/icons/plan_changes.svg', class: 'card__icon'

      - if local_assigns[:active].blank?
        .card__body
          .card__empty-note
            - if model.published? && !model.upcoming?
              %p= t('workarea.admin.releases.cards.plan_changes.release_published_html', attributes_link: link_to('Attributes', edit_release_path(model)))
            - else
              %p= t('workarea.admin.releases.cards.plan_changes.release_not_published_1')
              %p= t('workarea.admin.releases.cards.plan_changes.release_not_published_2')

          = link_to release_releasables_path(model), class: 'card__button' do
            %span.button.button--small= t('workarea.admin.releases.cards.plan_changes.button')

  .grid__cell
    .card{ class: card_classes(:planned_changes, local_assigns[:active]) }
      = link_to release_changesets_path(model), class: 'card__header' do
        %span.card__header-text
          - if model.upcoming?
            = t('workarea.admin.releases.cards.planned_changes.planned')
          = t('workarea.admin.releases.cards.planned_changes.changes')
        = inline_svg_tag 'workarea/admin/icons/planned_changes.svg', class: 'card__icon'

      - if local_assigns[:active].blank?
        .card__body
          - if model.changeset_count.zero?
            %p.card__empty-note= t('workarea.admin.releases.cards.planned_changes.empty_note')
            = link_to release_changesets_path(model), class: 'card__button' do
              %span.button.button--small= t('workarea.admin.releases.cards.planned_changes.button')
          - else
            %table
              %tbody
                - model.changeset_summary.each do |summary|
                  %tr
                    %td.align-right
                      %strong= summary.count
                    %td= summary.label

            = link_to release_changesets_path(model), class: 'card__button' do
              %span.button.button--small= t('workarea.admin.releases.cards.planned_changes.button')

  .grid__cell
    = render 'workarea/admin/comments/card', commentable: model, active: local_assigns[:active]
