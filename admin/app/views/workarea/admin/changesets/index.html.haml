- @page_title = "#{t('workarea.admin.changesets.planned_changes_for')} #{@release.name}"

.comments.view
  .view__header
    .grid.grid--middle.grid--right
      .grid__cell.grid__cell--50
        .view__heading
          = link_to "â†‘ #{t('workarea.admin.changesets.all_releases')}", releases_path
          %h1= link_to @release.name, url_for(@release)
      .grid__cell.grid__cell--25
        = render_aux_navigation_for(@release)

  .view__container
    = render_cards_for(@release, :planned_changes)

    - if @release.changesets_with_releasable.blank?
      %p.heading--2.align-center= t('workarea.admin.changesets.no_activity')

    .grid.grid--center
      .grid__cell.grid__cell--80-at-medium
        %ul.list-reset
          - @release.changesets_with_releasable.each do |changeset|
            %li
              .release-changeset
                .release-changeset__header
                  .release-changeset__icon
                    = changeset_icon changeset, { class: 'svg-icon svg-icon--large'}
                  %h5.release-changeset__heading= link_to changeset.name, url_for(changeset.root)
                  .release-changeset__actions
                    .grid.grid--auto
                      %p.grid__cell
                        = link_to polymorphic_path(changeset.root, release_id: changeset.release), class: 'text-button' do
                          = t('workarea.admin.actions.edit')
                          = inline_svg('workarea/admin/icons/edit.svg', class: 'text-button__icon')
                      = form_tag release_changeset_path(@release, changeset), method: :delete, class: 'grid__cell', data: { deletion_form: { message: t('workarea.admin.changesets.delete_confirmation') } } do
                        = button_tag value: 'delete_changeset', class: 'text-button text-button--destroy' do
                          = t('workarea.admin.actions.delete')
                          = inline_svg('workarea/admin/icons/delete.svg', class: 'text-button__icon')

                .release-changeset__body
                  - changeset.changed_fields.each do |field|
                    = render_changeset_field(changeset, field)
