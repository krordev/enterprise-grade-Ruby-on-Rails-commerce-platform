- @page_title = t('workarea.admin.catalog_product_copies.new.title')

.view
  .view__header
    .view__heading
      - if @product.present?
        %h1= t('workarea.admin.catalog_product_copies.new.preselected_title', product: @product.name)
        %p= t('workarea.admin.catalog_product_copies.new.preselected_description')
      - else
        %h1= t('workarea.admin.catalog_product_copies.new.title')
        %p= t('workarea.admin.catalog_product_copies.new.description')

  .view__container
    - if @product_copy.present?
      - @product_copy.errors.full_messages.each do |message|
        = render_message 'error', message

    = form_tag catalog_product_copies_path, method: 'post', data: { unsaved_changes: '', product_copy_ids: '' } do
      .section
        .grid.grid--center
          .grid__cell.grid__cell--33
            - if @product.present?
              = hidden_field_tag :source_product_id, @product.id
            - else
              .property.property--required
                = label_tag 'source_product_id', t('workarea.admin.catalog_product_copies.new.fields.source_product_id'), class: 'property__name'
                = select_tag 'source_product_id', options_for_products(params['source_product_id']), include_blank: true, required: true, data: { remote_select: { source: catalog_products_path(format: :json), options: { placeholder: t('workarea.admin.content_blocks.products.select_placeholder') } }.to_json }

            .property{ class: ('hidden' unless @product.present?) }
              %span.property__name= t('workarea.admin.fields.original_id')
              = text_field_tag 'original_id', @product.present? ? @product.id : nil, disabled: true, class: 'text-box', data: { product_copy_ids_target: '' }

            .property.property--required{ class: ('hidden' unless @product.present?) }
              = label_tag 'product[id]', t('workarea.admin.fields.id'), class: 'property__name'
              = text_field_tag 'product[id]', nil, class: 'text-box', required: true, placeholder: 'new-product-id-here'
              %span.property__note
                = button_tag t('workarea.admin.catalog_product_copies.new.copy_original'), type: 'button', class: 'text-button', value: 'copy_original'
                = button_tag t('workarea.admin.catalog_product_copies.new.randomize'), type: 'button', class: 'text-button', value: 'randomize'

      .workflow-bar
        .grid.grid--middle
          .grid__cell.grid__cell--50
            = link_to t('workarea.admin.form.cancel'), :back, class: 'workflow-bar__button workflow-bar__button--delete'

          .grid__cell.grid__cell--50
            .grid.grid--auto.grid--right.grid--middle
              .grid__cell= button_tag t('workarea.admin.catalog_product_copies.new.button'), value: 'create_copy', class: 'workflow-bar__button workflow-bar__button--create'
